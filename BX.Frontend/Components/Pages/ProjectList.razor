@page "/projects"
@using BX.Models
@using BX.Frontend.Services
@inject ProjectService ProjectService
@inject NavigationManager Navigation

<div class="container mt-4">
    <h3 class="text-center text-primary">🏗️ Lista de Proyectos</h3>
    <p class="text-muted text-center">Explora nuestros proyectos en desarrollo y completados.</p>

    <!-- Filtros de búsqueda -->
    <div class="card shadow-lg p-4 mb-4 mx-auto" style="max-width: 2000px;">
        <h5 class="text-center text-secondary fs-5">🎯 Filtros de búsqueda</h5>

        <div class="row">
            <div class="col-md-4">
                <label class="form-label fs-6">🔍 Buscar por Nombre o Descripción</label>
                <input type="text" class="form-control form-control-sm" placeholder="Ej: Casa moderna..." @bind="searchText" />
            </div>
            <div class="col-md-4">
                <label class="form-label fs-6">🏗️ Tipo de Construcción</label>
                <select class="form-select form-select-sm" @bind="constructionType">
                    <option value="">Todos</option>
                    <option value="Prefabricados">Prefabricados</option>
                    <option value="Block">Block</option>
                </select>
            </div>
            <div class="col-md-4">
                <label class="form-label fs-6">📍 Estado del Proyecto</label>
                <select class="form-select form-select-sm" @bind="status">
                    <option value="">Todos</option>
                    <option value="Pendiente">Pendiente</option>
                    <option value="Construcción">Construcción</option>
                    <option value="Venta">Venta</option>
                    <option value="Remodelación">Remodelación</option>
                </select>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-4">
                <label class="form-label fs-6">📍 Provincia</label>
                <input type="text" class="form-control form-control-sm" placeholder="Ej: San José" @bind="province" />
            </div>
            <div class="col-md-4">
                <label class="form-label fs-6">🏡 Cantón</label>
                <input type="text" class="form-control form-control-sm" placeholder="Ej: Escazú" @bind="canton" />
            </div>
            <div class="col-md-4">
                <label class="form-label fs-6">💰 Rango de Precio</label>
                <div class="d-flex">
                    <input type="number" class="form-control form-control-sm me-2" placeholder="Mín." @bind="minPrice" />
                    <input type="number" class="form-control form-control-sm" placeholder="Máx." @bind="maxPrice" />
                </div>
            </div>
        </div>

        <div class="row mt-3">
            <div class="col-md-4">
                <label class="form-label fs-6">🛏️ Habitaciones</label>
                <input type="number" class="form-control form-control-sm" placeholder="Ej: 3" @bind="bedrooms" />
            </div>
            <div class="col-md-4">
                <label class="form-label fs-6">🚿 Baños</label>
                <input type="number" class="form-control form-control-sm" placeholder="Ej: 2" @bind="bathrooms" />
            </div>
            <div class="col-md-4 d-flex align-items-end">
                <button class="btn btn-outline-primary w-100" @onclick="FilterProjects">🔍 Buscar</button>
                <button class="btn btn-outline-secondary w-100 ms-2" @onclick="ClearFilters">❌ Limpiar</button>
            </div>
        </div>
    </div>


    <!-- Estado de carga -->
    @if (filteredProjects == null)
    {
        <div class="text-center mt-4">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-2">Cargando proyectos...</p>
        </div>
    }
    else if (filteredProjects.Count == 0)
    {
        <p class="text-muted text-center mt-3">No se encontraron proyectos con los criterios seleccionados.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var project in filteredProjects)
            {
                <div class="col">
                    <div class="card shadow-lg rounded overflow-hidden">
                        <img src="https://picsum.photos/300/200?random=@project.Id" class="card-img-top" alt="Imagen del proyecto">

                        <div class="card-body">
                            <h5 class="card-title text-dark">@project.Name</h5>
                            <p class="card-text text-muted">@project.Description</p>
                            <p><strong>📍 Ubicación:</strong> @project.Province, @project.Canton</p>
                            <p><strong>💰 Precio:</strong> @project.Price.ToString("C")</p>
                            <p><strong>🏗️ Tipo:</strong> @project.ConstructionType</p>

                            <div class="d-flex justify-content-between mt-3">
                                <button class="btn btn-outline-primary w-100 me-2" @onclick="() => ViewDetails(project.Id)">Ver Detalles</button>
                                <button class="btn btn-outline-danger w-100" @onclick="() => DeleteProject(project.Id)">Eliminar</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<Project> filteredProjects = new();
    private string searchText = "";
    private string constructionType = "";
    private string status = "";
    private string province = "";
    private string canton = "";
    private int? minPrice;
    private int? maxPrice;
    private int? bedrooms;
    private int? bathrooms;

    protected override async Task OnInitializedAsync()
    {
        await FilterProjects();
    }

    private async Task DeleteProject(int id)
    {
        await ProjectService.DeleteProjectAsync(id);
        await FilterProjects();
    }

    private void ViewDetails(int id)
    {
        Navigation.NavigateTo($"/project-details/{id}");
    }

    private async Task FilterProjects()
    {
        filteredProjects = await ProjectService.GetFilteredProjectsAsync(searchText, constructionType, status, province, canton, minPrice, maxPrice, bedrooms, bathrooms);
    }

    private async Task ClearFilters()
    {
        searchText = "";
        constructionType = "";
        status = "";
        province = "";
        canton = "";
        minPrice = null;
        maxPrice = null;
        bedrooms = null;
        bathrooms = null;
        await FilterProjects();
    }
}
